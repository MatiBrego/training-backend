name: Jest Tests for Twitter Clone


on: [push]

jobs:
  Test:
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: node/express-prisma-typescript
        
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}"
      DB_DOCKER_SERVICE: "db"
      DOCKER_DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_DOCKER_SERVICE}/${POSTGRES_DB}?connect_timeout=600"
      
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.2
        with: 
          node-version: 18
          
      - name: Yarn Setup
        uses: DerYeger/yarn-setup-action@v1.0.1
        with:
          # The version of Node.js that will be used
          node-version: 18
          
      - name: Setup .env
        run: |
          touch .env
          echo export POSTGRES_DB=app >> .env
          echo export POSTGRES_USER=postgres >> .env
          echo export POSTGRES_PASSWORD=password >> .env
          echo export DATABASE_URL="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}"
          echo DB_DOCKER_SERVICE="db"
          echo export DOCKER_DATABASE_URL="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_DOCKER_SERVICE}/${POSTGRES_DB}?connect_timeout=600"
          cat .env
          
      - name: Docker Compose
        run: docker compose up
        
      - run: npm install
      - run: npm run test
      

